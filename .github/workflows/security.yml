name: Security Scanning

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Dependency vulnerability scan
  dependency-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    # Backend dependency scan
    - name: Install Backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run Backend security audit
      working-directory: ./backend
      run: |
        npm audit --audit-level=high --json > backend-audit.json || true
        npm audit --audit-level=high

    - name: Upload Backend audit results
      uses: actions/upload-artifact@v4
      with:
        name: backend-audit
        path: backend/backend-audit.json

    # Frontend dependency scan
    - name: Install Frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run Frontend security audit
      working-directory: ./frontend
      run: |
        npm audit --audit-level=high --json > frontend-audit.json || true
        npm audit --audit-level=high

    - name: Upload Frontend audit results
      uses: actions/upload-artifact@v4
      with:
        name: frontend-audit
        path: frontend/frontend-audit.json

  # Code security scan with CodeQL
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'typescript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd backend && npm ci
        cd ../frontend && npm ci

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # Container image security scan
  container-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Run Trivy vulnerability scanner on Backend
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '024190746294.dkr.ecr.us-east-1.amazonaws.com/resident-backend:latest'
        format: 'sarif'
        output: 'trivy-backend-results.sarif'

    - name: Run Trivy vulnerability scanner on Frontend
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '024190746294.dkr.ecr.us-east-1.amazonaws.com/resident-frontend:latest'
        format: 'sarif'
        output: 'trivy-frontend-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-backend-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-frontend-results.sarif'

  # Kubernetes security scan
  k8s-security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run kube-score
      uses: zegl/kube-score-action@v1
      with:
        kubernetes_version: 'v1.28'
        paths: 'k8s/*.yaml'
        output-format: 'sarif'
        output-file: 'kube-score-results.sarif'

    - name: Upload kube-score results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'kube-score-results.sarif'

  # Generate security report
  security-report:
    needs: [dependency-scan, codeql-analysis, k8s-security]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Generate Security Report
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Get workflow run results
          const { data: runs } = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'security.yml',
            status: 'completed',
            per_page: 1
          });
          
          const run = runs.workflow_runs[0];
          const jobs = await github.rest.actions.listJobsForWorkflowRun({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: run.id
          });
          
          const report = {
            timestamp: new Date().toISOString(),
            workflow_run_id: run.id,
            status: run.conclusion,
            jobs: jobs.data.map(job => ({
              name: job.name,
              status: job.conclusion,
              steps: job.steps.map(step => ({
                name: step.name,
                status: step.conclusion
              }))
            }))
          };
          
          fs.writeFileSync('security-report.json', JSON.stringify(report, null, 2));
          
          console.log('Security Report Generated:', report);

    - name: Upload Security Report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: security-report.json
