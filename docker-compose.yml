version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: resident-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: resident_management
      MYSQL_USER: resident_user
      MYSQL_PASSWORD: resident_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - resident-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: resident-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: mysql://dung:tiendungpro123@cdr.cc3cumaiaj7q.us-east-1.rds.amazonaws.com:3306/resident_management
      JWT_SECRET: your-super-secret-jwt-key-here
      JWT_EXPIRES_IN: 7d
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - mysql
    networks:
      - resident-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: resident-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - resident-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mysql_data:

networks:
  resident-network:
    driver: bridge
